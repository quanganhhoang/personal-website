{"version":3,"sources":["components/Header.js","components/Footer.js","components/About.js","components/Resume.js","components/Contact.js","components/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["Header","name","occupation","networks","this","props","data","social","map","network","key","href","url","className","id","title","Component","Footer","About","image","bio","funfact","address","street","city","state","zip","phone","email","resumeDownload","profilePic","src","alt","Resume","education","work","skills","educationDiv","workDiv","coursesDiv","languagesDiv","techonologiesDiv","courses","join","school","degree","graduated","workDescriptionDiv","description","elem","company","years","languages","technologies","Contact","contactmessage","action","method","htmlFor","type","defaultValue","size","onChange","handleChange","cols","rows","Portfolio","projects","projectImage","project","category","App","getResumeData","axios","get","then","res","setState","resumeData","catch","err","console","log","alert","ReactGA","initialize","pageview","window","location","pathname","main","resume","portfolio","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7d285ce8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        let name, occupation, social;\n        let networks;\n        if (this.props.data) {\n            ( {name, occupation, social} = this.props.data)\n            \n            networks = social.map(network => {\n                return (\n                    <li key={network.name}>\n                        <a href={network.url}><i className={network.className}></i></a>\n                    </li>\n                )\n            });\n        }\n        \n        return (\n            <header id=\"home\">\n\n            <nav id=\"nav-wrap\">\n                <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n                <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n                <ul id=\"nav\" className=\"nav\">\n                <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n                <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n                <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n                </ul>\n            </nav>\n\n            <div className=\"row banner\">\n                <div className=\"banner-text\">\n                <h1 className=\"responsive-headline\">{name}</h1>\n                <h2 className=\"responsive-headline\">{occupation}</h2>\n                {/* <h3>I'm a <span>{occupation}</span> based in <span>{city}</span>. {description}.</h3> */}\n                <hr />\n                <ul className=\"social\">\n                    {networks}\n                </ul>\n                </div>\n            </div>\n\n            <p className=\"scrolldown\">\n                <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n            </p>\n\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        let networks;\n        if (this.props.data) {\n            networks = this.props.data.social.map(network => {\n                return (\n                    <li key={network.name}>\n                        <a href={network.url}><i className={network.className}></i></a>\n                    </li>\n                )\n            })\n        }\n\n        return (\n            <footer>\n                <div className=\"row\">\n                    <div className=\"twelve columns\">\n                        <ul className=\"social-links\">\n                            {networks}\n                        </ul>\n\n                        <ul className=\"copyright\">\n                            <li>&copy; Copyright 2017 Tim Baker</li>\n                            <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\n                        </ul>\n\n                    </div>\n                    <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n                        <i className=\"icon-up-open\"></i></a>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        let name, image, bio, funfact, address, street, city, state, zip, phone, email, resumeDownload;\n        let profilePic;\n        if (this.props.data) {\n            ( { name, image, bio, funfact, address, phone, email, resumeDownload } = this.props.data);\n            ( { street, city, state, zip } = address)\n            profilePic = `../../public/images/${image}`;\n        }\n\n        return (\n            <section id=\"about\">\n            <div className=\"row\">\n                <div className=\"three columns\">\n                    <img className=\"profile-pic\" src={profilePic} alt=\"QA's Profile Pic\" />\n                </div>\n                <div className=\"nine columns main-col\">\n                    <h2>About Me</h2>\n\n                    <p>{bio}</p>\n                    <h2>Fun Fact</h2>\n                    <p>{funfact}</p>\n                    <div className=\"row\">\n                        <div className=\"columns contact-details\">\n                            <h2>Contact Details</h2>\n                            <p className=\"address\">\n                                <span>{name}</span><br />\n                                <span>{street}<br />\n                                        {city} {state}, {zip}\n                                </span>\n                                <br />\n                                <span>{phone}</span>\n                                <br />\n                                <span>{email}</span>\n                            </p>\n                        </div>\n                        <div className=\"columns download\">\n                            <p>\n                                <a \n                                    href={resumeDownload} \n                                    className=\"button\">\n                                        <i className=\"fa fa-download\"></i>\n                                        Download Resume\n                                </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Resume extends Component {\n    render() {\n        let education, work, skills;\n        let educationDiv, workDiv;\n        let coursesDiv;\n        let languagesDiv, techonologiesDiv;\n        if (this.props.data) {\n            ( { education, work, skills } = this.props.data);\n            \n            educationDiv = education.map(education => {\n                coursesDiv = education.courses.join(', ')\n\n                return (\n                    <div key={education.school}>\n                        <h3>{education.school}</h3>\n                        <p className=\"info\">{education.degree} <span>&bull;</span><em className=\"date\">{education.graduated}</em></p>\n                        <p className=\"courses\">\n                            Relevant courses: {coursesDiv}\n                        </p>\n                    </div>\n                )\n            })\n\n            workDiv = work.map(work => {\n                const workDescriptionDiv = work.description.map(elem => {\n                    return (\n                        <li key={elem}>{elem}</li>\n                    )\n                })\n                return (\n                    <div key={work.company}>\n                        <h3>{work.company}</h3>\n                        <p className=\"info\">\n                            {work.title}\n                            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n                        </p>\n                        <ul className=\"work-experience\">\n                            {workDescriptionDiv}\n                        </ul>\n                        \n                    </div>\n                )\n            })\n            \n            const { languages, technologies } = skills;\n            languagesDiv = languages.map(elem => {\n                return (\n                    <li key={elem}>{elem}</li>\n                )\n            })\n\n            techonologiesDiv = technologies.map(elem => {\n                return (\n                    <li key={elem}>{elem}</li>\n                )\n            })\n        }\n\n        return (\n            <section id=\"resume\">\n                <div className=\"row education\">\n                    <div className=\"three columns header-col\">\n                        <h1><span>Education</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        <div className=\"row item\">\n                            <div className=\"twelve columns\">\n                                {educationDiv}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"row work\">\n                    <div className=\"three columns header-col\">\n                        <h1><span>Work</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        {workDiv}\n                    </div>\n                </div>\n\n                <div className=\"row skill\">\n                    <div className=\"three columns header-col\">\n                        <h1><span>Technologies</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        <div>\n                            <h3>Languages</h3>\n                            <ul className=\"work-experience\">\n                                {languagesDiv}\n                            </ul>\n                            <h3>Technologies &amp; Frameworks</h3>\n                            <ul className=\"work-experience\">\n                                {techonologiesDiv}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        let name, address, street, city, state, zip, phone, email, contactmessage;\n        if (this.props.data) {\n            ( { name, address, phone, email, contactmessage } = this.props.data);\n            ( { street, city, state, zip } = address )\n        }\n\n        return (\n            <section id=\"contact\">\n                <div className=\"row section-head\">\n                    <div className=\"two columns header-col\">\n                        <h1><span>Get In Touch.</span></h1>\n                    </div>\n\n                    <div className=\"ten columns\">\n                        <p className=\"lead\">{contactmessage}</p>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"eight columns\">\n                        <form action=\"\" method=\"post\" id=\"contactForm\" name=\"contactForm\">\n                            <fieldset>\n                                <div>\n                                    <label htmlFor=\"contactName\">Name <span className=\"required\">*</span></label>\n                                    <input \n                                        type=\"text\" \n                                        defaultValue=\"\" \n                                        size=\"35\" \n                                        id=\"contactName\" \n                                        name=\"contactName\" \n                                        onChange={this.handleChange}\n                                    />\n                                </div>      \n\n                                <div>\n                                    <label htmlFor=\"contactEmail\">Email<span className=\"required\">*</span></label>\n                                    <input \n                                        type=\"text\" \n                                        defaultValue=\"\" \n                                        size=\"35\" \n                                        id=\"contactEmail\" \n                                        name=\"contactEmail\" \n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n\n                                <div>\n                                    <label htmlFor=\"contactSubject\">Subject</label>\n                                    <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactSubject\" name=\"contactSubject\" onChange={this.handleChange}/>\n                                </div>\n\n                                <div>\n                                    <label htmlFor=\"contactMessage\">Message <span className=\"required\">*</span></label>\n                                    <textarea cols=\"50\" rows=\"15\" id=\"contactMessage\" name=\"contactMessage\"></textarea>\n                                </div>\n\n                                <div>\n                                    <button className=\"submit\">Submit</button>\n                                    <span id=\"image-loader\">\n                                        <img alt=\"\" src=\"images/loader.gif\" />\n                                    </span>\n                                </div>\n                            </fieldset>\n                        </form>\n\n                    <div id=\"message-warning\">Error</div>\n                            <div id=\"message-success\">\n                                <i className=\"fa fa-check\"></i>Your message was sent, thank you!<br />\n                            </div>\n                    </div>\n\n                    <aside className=\"four columns footer-widgets\">\n                        <div className=\"widget widget_contact\">\n                            <h4>Contact Details</h4>\n                            <p className=\"address\">\n                                <span>{name}</span> <br />\n                                <span>{street}</span> <br />\n                                {city}, {state} {zip} <br />\n                                <span>{email}</span> <br />\n                                <span>{phone}</span>\n                            </p>\n                        </div>\n                    </aside>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n    render() {\n        let projects, projectImage;\n\n        if (this.props.data) {\n            projects = this.props.data.projects.map(project => {\n                projectImage = 'images/portfolio/' + project.image;\n                return (\n                    <div key={project.title} className=\"columns portfolio-item\">\n                        <div className=\"item-wrap\">\n                            <a href={project.url} title={project.title}>\n                                <img alt={project.title} src={projectImage} />\n                                <div className=\"overlay\">\n                                    <div className=\"portfolio-item-meta\">\n                                        <h5>{project.title}</h5>\n                                        <p>{project.category}</p>\n                                    </div>\n                                </div>\n                                <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n                            </a>\n                        </div>\n                    </div>\n                )\n            })\n        }\n\n        return (\n            <section id=\"portfolio\">\n                <div className=\"row\">\n                    <div className=\"twelve columns collapsed\">\n                        <h1>Portfolio</h1>\n                        <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n                            {projects}\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport axios from 'axios';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Contact from './components/Contact';\nimport Portfolio from './components/Portfolio';\n\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            resumeData: {}\n        };\n\n        ReactGA.initialize('UA-110570651-1');\n        ReactGA.pageview(window.location.pathname);\n    }\n\n    getResumeData = () => {\n        axios.get('resumeData.json')\n        .then(res => {\n            this.setState({\n                resumeData: res.data\n            })\n        })\n        .catch(err => {\n            console.log(err)\n            alert(err)\n        })\n    }\n\n    componentDidMount() {\n        this.getResumeData();\n    }\n\n    render() {\n        const { main, resume, portfolio } = this.state.resumeData;\n        return (\n            <div className=\"App\">\n                <Header data={ main }/>\n                <About data={ main }/>\n                <Resume data={ resume }/>\n                <Portfolio data={ portfolio }/>\n                <Contact data={ main }/>\n                <Footer data={ main }/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}